<p>
  <strong>Name:</strong>
  <%= @course.name %>
</p>

<p>
  <strong>Category:</strong>
  <%= @course.category %>
</p>

hola
<%= link_to 'Edit', edit_course_path(@course) %> |
<%= link_to 'Back', courses_path %>

<div id="video-container">

<script>
var OV = new OpenVidu();
var session = OV.initSession();


// On every new Stream received...
session.on('streamCreated', event => {

    // Subscribe to the Stream to receive it. HTML video will be appended to element with 'video-container' id
    var subscriber = session.subscribe(event.stream, 'video-container');

    // When the HTML video has been appended to DOM...
    subscriber.on('videoElementCreated', event => {
        // Add a new <p> element for the user's nickname just below its video
    //    appendUserData(event.element, subscriber.stream.connection);
    });
});

// On every Stream destroyed...
session.on('streamDestroyed', event => {

    // Delete the HTML element with the user's nickname. HTML videos are automatically removed from DOM
    //removeUserData(event.stream.connection);
});

session.connect("<%= raw @token %>", { clientData: "<%= current_user.email %>" })
  .then(() => {
    var publisher = OV.initPublisher('video-container', {
        audioSource: undefined, // The source of audio. If undefined default microphone
        videoSource: undefined, // The source of video. If undefined default webcam
        publishAudio: true,     // Whether you want to start publishing with your audio unmuted or not
        publishVideo: true,     // Whether you want to start publishing with your video enabled or not
        resolution: '640x480',  // The resolution of your video
        frameRate: 30,          // The frame rate of your video
        insertMode: 'APPEND',   // How the video is inserted in the target element 'video-container'
        mirror: false           // Whether to mirror your local video or not
    });

    session.publish(publisher);

})
  .catch(error => {
      console.log("There was an error connecting to the session:", error.code, error.message);

  })



</script>
